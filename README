cdeploy Readme
==============

I. Synopsis

cdeploy is a simple utility which helps deploying 
configuration files onto a system (ok, they do not 
necessarily need to be configuration files, as it just works
with all kinds of regular files, but I wrote it for that
purpose, so that's where the name comes from).


II. Features

* create a backup copy of the original file
* detect user, group and mode of the original file
* apply user, group and mode to the new file
* easy restore of old configs if something didn't fit


III. Installation

cdeploy ships with a make file, so just type 

make install

to install cdeploy into /usr/local/sbin (if you
would like to use another installation target, please
edit the shipped Makefile to meet your needs.


IV. Platforms

cdeploy should work on all POSIX-compliant platforms
providing a POSIX-compliant shell (/bin/sh) and a passwd and
group file located in /etc.

However, the author has tested cdeploy only on 
FreeBSD systems (7.2-RELEASE, 7.2-STABLE and 8.0-RC1).


V. Usage

Simply run cdeploy from a configuration tree directory.
For possible options please type 

cdeploy -h

cdeploy will look for configuration files within
the current directory and below. All files that reside
inside or below the directory you run it from will
be deployed into the chosen destination (by default, this
is the file system root '/').

So if there is a ./etc directory in your CWD, all files
residing inside this directory will be deployed to /etc.
Subdirectories will be taken into account; e. g. files from
./etc/ssh will be deployed to /etc/ssh, ./root to /root etc.


VI. Example

Create an empty directory inside your home directory (the
name doesn't matter, thus I will reference to it as 'foo').

Inside foo, create a subdirectory representing your home
directory, e. g. ~/foo/home/<myuser>.

Put a file into ~/foo/home/<myuser>, e. g. using echo:

echo "Hello Foo" > ~/foo/home/<myuser>/testfile

now change into the foo directory and run cdeploy:

cd ~/foo
cdeploy

You will now have testfile deployed into you home directory:

ls ~
... testfile ...

Now change the testfile inside your foo directory and deploy
it again. You will now find the changed testfile inside your
home directory and a backup copy of the old testfile inside
~/.cdeploy/<date_time>/

The icing on the cake: the backup directory ~/.cdeploy/<date_time>/
is a whole and saint config tree directory. You can just go there
and run cdeploy again and, wonder of wonders, your old 
configs are restored once again (and of course you got a 
backup of the previously installed ones which could again be
re-deployed, but you surely figured this one out by yourself ;-))
